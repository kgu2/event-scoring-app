{"version":3,"sources":["Profile/profile.js","Event.js","InputTable.js","App.js","index.js"],"names":["React","Component","InputTable","tableRows","useState","name","changeName","event","changeEvent","finals","changeFinals","throws","changeThrows","flight","changeFlight","info","changeInfo","distance","changeDistance","distanceTwo","changeDistanceTwo","englishMetric","changeEnglishMetric","scratch","changeScratch","handleInput","target","type","id","value","prevState","isNumber","num","split","map","int","parseInt","filter","isNaN","length","className","onChange","placeholder","disabled","selected","checked","onClick","console","log","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a37adaa7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Profile extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sex: null,\r\n            firstName: \"\", \r\n            lastName: \"\", \r\n            ranking : 0,\r\n            furthestThrow: 0,\r\n        };\r\n\r\n    }\r\n\r\n    fullName() {\r\n        this.getName();\r\n        return this.state.firstName + \" \" + this.state.lastName;\r\n    };    \r\n\r\n    getName(){\r\n        this.setState({\r\n            firstName: \"John\", \r\n            lastName: \"Downey\"\r\n        });\r\n    };\r\n\r\n    getRanking(){\r\n        return `Ranking: ${this.state.ranking}`;\r\n    }\r\n\r\n    getFurthestThrow(){\r\n        return `Furthest Throw: ${this.state.furthestThrow}`;\r\n    }\r\n\r\n\r\n    render() {\r\n     let profile_pic = (this.state.sex === 'F')? './profile_female.png' : './profile_man.png';\r\n\r\n      return (\r\n        <div class=\"card\" src={profile_pic} style={{width:400 + 'px'}}>\r\n            <img class=\"card-img-top\" src={profile_pic} alt=\"Card image\" />\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title\">{this.fullName()}</h4>\r\n                <p class=\"card-text\">{this.getRanking()}</p>\r\n                <p class=\"card-text\">{this.getFurthestThrow()}</p>\r\n                <a href=\"#\" class=\"btn btn-primary\">See Athlete Profile</a>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport Profile from './Profile/profile';\r\n\r\nexport default class Event extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          meet: null, \r\n          practice: null,\r\n\r\n        };\r\n\r\n        let banner = this.props.eventType;\r\n        let events = [\"shot\", \"discus\", \"hammer\", \"javelin\", \"weight\"];\r\n    }\r\n\r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Hello CS 321</h1>\r\n            <p>Welcome to our Team, we will be having a  + {this.banner}</p>\r\n            {/*<Profile />*/} \r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n\r\n  ","import React , { useState } from 'react';\r\n\r\nfunction InputTable () {\r\n    let tableRows = []\r\n    //const eventList = [\"shot\",\"discus\",\"hammer\",\"weight\",\"javelin\"]\r\n    const [name,changeName] = useState()\r\n    const [event,changeEvent] = useState()\r\n    const [finals, changeFinals] = useState(false)\r\n    const [throws, changeThrows] = useState()\r\n    const [flight,changeFlight] = useState()\r\n    const [info, changeInfo] = useState(tableRows)\r\n    const [distance, changeDistance] = useState()//for feet/meters\r\n    const [distanceTwo, changeDistanceTwo] = useState()//for inches/centimeters\r\n    const [englishMetric,changeEnglishMetric] = useState(\"metric\")\r\n    const [scratch,changeScratch] = useState(false)\r\n    \r\n    /*\r\n    function eventScore(value,event){\r\n        if(event === \"shot\")\r\n        else if(event === \"javelin\")\r\n            return (-36.14048+(value*37.268536)+(value*value*-0.128057))\r\n        else if(event === \"discus\")\r\n            return \r\n        else if(event === \"hammer\")\r\n        else if(event === \"weight\")\r\n        \r\n         Math.round(-36.14048+(slj*37.268536)+(slj*slj*-0.128057));\r\n  var bhp =  Math.round(-36.36996+(bh*12.478922)+(bh*bh*-0.007423));\r\n  var sp = Math.round(209.70039+(s*-36.94427)+(s*s*0.165766));\r\n  var osp = Math.round(-22.32216+(os*5.8318756)+(os*os*-0.000334));\r\n    \r\n    \r\n    }    \r\n    */\r\n    function shiftEnglishMetric(event){\r\n        const {value} = event.target\r\n        changeEnglishMetric(prevState => !prevState)\r\n    \r\n    }\r\n    function handleInput(event){\r\n        const {type,id,value} = event.target\r\n        if(type === \"checkbox\" && id === \"scratch\"){ changeScratch(prevState => !prevState )}\r\n        else if(type === \"checkbox\"){ changeFinals(prevState => !prevState )}\r\n        else  if(id === \"name\") {changeName(() => value)}\r\n        else  if(id === \"event\") {changeEvent(() => value)}\r\n        else  if(id === \"finals\") {changeFinals(() => value)}\r\n        else  if(id === \"throws\") {changeThrows(() => value)}\r\n        else  if(id === \"englishmetric\") {changeEnglishMetric(() => value)}\r\n        else  if(id === \"flight\") {changeFlight(() => value)}\r\n        else  if(id === \"distance\") {changeDistance(() => value)}\r\n        else  if(id === \"distanceTwo\") {changeDistanceTwo(() => value)}\r\n    }\r\n    function isNumber(num){ //checks if input is a number assuring all charectars within the string are integers\r\n       return  0 < num.split('').map(int => parseInt(int)).filter((int) => isNaN(int)).length\r\n    \r\n    \r\n    }\r\n    \r\n    function addData() {\r\n       // let tableRows = [...tableRows]\r\n       console.log(event)\r\n       \r\n       if(typeof name === 'undefined'){\r\n        alert(\"Please enter athlete name\")\r\n       }\r\n       else if(typeof event === 'undefined'){\r\n        alert(\"Please choose an event\")\r\n       }\r\n       else if(typeof throws === 'undefined'){\r\n        alert(\"Please choose number of throws\")\r\n       }\r\n       else if(typeof flight === 'undefined' || isNumber(flight)){\r\n        alert(\"Please enter a valid flight number\")\r\n       }\r\n       else if((typeof distance === 'undefined' ||( isNumber(distance))) && scratch!==true){\r\n        alert(\"Please enter a valid distance\")\r\n       }\r\n       else if((typeof distanceTwo === 'undefined' || isNumber(distanceTwo)) && scratch!==true){\r\n        alert(\"Please enter a valid distance\")\r\n       }\r\n       else{\r\n       \r\n        changeInfo([...info,<tr><td>{name}</td><td>{event}</td><td>{(finals? \"Yes\": \"No\")}</td><td>{throws}</td><td>{flight}</td><td>{(scratch!==true)? (distance + \"-\" + distanceTwo + (englishMetric === \"english\" ? \" Feet-Inches\" : \"m.cm\")):'S'}</td></tr>])\r\n       }\r\n      // console.log(isNumber(flight))\r\n        /*\r\n        changeFinals(() => {} )\r\n        changeName(() => {})\r\n        changeEvent(() => {})\r\n        changeFinals(() => false)\r\n        changeThrows(() => {})\r\n        changeFlight(() => {})\r\n        */\r\n      // changeInfo([...info,<tr><td>{name}</td><td>{event}</td><td>{(finals? \"Yes\": \"No\")}</td><td>{throws}</td><td>{flight}</td></tr>])\r\n        console.log(parseInt(throws))\r\n        console.log(tableRows)\r\n    }\r\n    return(\r\n    <div>\r\n        <form className=\"container\">\r\n            <div>\r\n                Athlete: <input  value = {name} id = \"name\" onChange = {handleInput} placeholder = \"Name\"/>\r\n                <br />\r\n                <label>Choose Event Type:</label>\r\n                <select id= \"event\" onChange = {handleInput}>\r\n                        <option value=\"\" disabled selected>Select Event Type</option>\r\n                        <option value=\"shot\">Shot</option>\r\n                        <option value=\"discus\">Discus</option>\r\n                        <option value=\"hammer\">Hammer</option>\r\n                        <option value=\"weight\">Weight</option>\r\n                        <option value=\"javelin\">Javelin</option>\r\n                    </select>\r\n                <br />\r\n                <label>Number of Throws</label> <br/>\r\n                <div>\r\n                    3: <input type=\"radio\" id=\"throws\" name=\"throws\" value=\"3\" onChange={handleInput}/>\r\n                    4: <input type=\"radio\" id=\"throws\" name=\"throws\" value=\"4\" onChange={handleInput}/>\r\n                    {/*   Throws: <input   value = {throws} id = \"throws\" onChange = {handleInput} placeholder= \"Number of Throws\"/> */}\r\n                </div>\r\n                <br />\r\n                Flight:<input  value = {flight} id = \"flight\" onChange = {handleInput} placeholder= \"Flight Number\" /> \r\n                <br />\r\n                Scratch: <input type = \"checkbox\" value = {scratch} id = \"scratch\"  checked = {scratch} onChange = {handleInput} /> \r\n                <br />\r\n                {\r\n                    (scratch!==true) ? (<div>\r\n                                english: <input type=\"radio\" id=\"englishmetric\" name=\"englishmetric\" value= \"english\" onChange={handleInput}/>\r\n                                metric: <input type=\"radio\" id=\"englishmetric\" name=\"englishmetric\" value=\"metric\" onChange={handleInput}/>\r\n                                <br />\r\n                                {(englishMetric === \"english\" ? \"Feet\" : \"Meters\")}:<input   value = {distance} id = \"distance\" onChange = {handleInput} /> \r\n                                <br />\r\n                                {(englishMetric === \"english\" ? \"Inches\" : \"Centimeters\")}:<input   value = {distanceTwo} id = \"distanceTwo\" onChange = {handleInput} /> \r\n                                <br />\r\n                                \r\n                            </div> ) : null\r\n                    }\r\n                    \r\n               \r\n                Finals: <input type = \"checkbox\" value = {finals} id = \"finals\"  checked = {finals} onChange = {handleInput} /> \r\n                <br />\r\n                <button type = \"button\" onClick={addData}>Submit</button>\r\n            </div>\r\n            {/*\r\n            <div>\r\n            The event entered must be shot , discus ,hammer, weight, or javelin\r\n            Throws must be either 3 or 4\r\n            Flight must be a number\r\n            </div>\r\n            */}\r\n        </form>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Event</th>\r\n                    <th>Finals</th>\r\n                    <th>Throws</th>\r\n                    <th>Flight</th>\r\n                    <th>Distance</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n             {info}\r\n             </tbody>\r\n        </table>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default InputTable","import React, { Component } from \"react\";\nimport Event from \"./Event\";\nimport InputTable from \"./InputTable\";\nimport './index.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}